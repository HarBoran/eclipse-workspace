package com.code.springdemo.dao;

import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.query.Query;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;
import org.springframework.transaction.annotation.Transactional;

import com.code.springdemo.entity.Customer;


@Repository
public class CustomerDAOImpl implements CustomerDAO {

	@Autowired
	//dependency injection : 의존성주입
	//Datasource datasource
	private SessionFactory sessionFactory;
	
	@Override
	@Transactional 
	//트렌잭션이란?
	//데이터베이스의 상태를 변화시키기 위해 수행하는 작업 단위
	//상태를 변화시킨다는 것 → SQL 질의어를 통해 DB에 접근하는 것
	public List<Customer> getCustomers() {
		
		//현제 hibernate세션을 가져옴
		Session currentSession = sessionFactory.getCurrentSession();		
		
		Query<Customer> theQuery = currentSession.createQuery("from Customer", Customer.class);
		
		List<Customer> customers = theQuery.getResultList();	
		System.out.println(customers);
		return customers;
	}

}
